name: Test

on:
  push:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - id: setup-acton
        uses: actonlang/setup-acton@v1
        with:
          channel: 'tip'
      - name: "Check out repository code"
        uses: actions/checkout@v4
      - name: "Cache acton stuff"
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/acton
            out
          key: acton-${{ hashFiles('**/build.act.json') }}-${{ steps.setup-acton.outputs.version }}
      - run: acton build --dev
      - run: acton test
      - run: acton test perf
      - uses: actions/upload-artifact@v4
        with:
          name: router_example
          path: out/bin/router_example

  net-test:
    strategy:
      fail-fast: false
      matrix:
        TESTENV: [quicklab-crpd]
    runs-on: ubuntu-24.04
    env:
      IMAGE_PATH: ${{ secrets.IMAGE_PATH || format('ghcr.io/{0}/', github.repository) }}
    needs: build-and-test
    steps:
      - name: Set up env for containers
        run: |
          # IOS XRd
          sudo sysctl -w fs.inotify.max_user_instances=64000
          # cRPD
          sudo apt-get update
          sudo apt-get install -qy linux-modules-extra-$(uname -r)
          sudo modprobe mpls_router mpls_gso vrf
      - name: "Check out repository code"
        uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: router_example
          path: out/bin/
      - run: chmod a+x out/bin/router_example
      - name: "Check out licenses repo"
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/licenses
          path: licenses
          ssh-key: ${{ secrets.LICENSES_PRIVATE_KEY }}
      # If we're using IMAGE_PATH=ghcr.io/... login to ghcr.io using GITHUB_TOKEN
      - name: Login to ghcr.io
        if: ${{ startsWith(env.IMAGE_PATH, 'ghcr.io') }}
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: "Start quicklab"
        run: |
          make -C test/${{ matrix.TESTENV }} start wait
      - name: "Copy test binary"
        run: |
          make -C test/${{ matrix.TESTENV }} copy
      - name: "Run quicklab tests"
        run: |
          make -C test/${{ matrix.TESTENV }} test
      - run: |
          make -C test/${{ matrix.TESTENV }} save-logs
        if: ${{ always() }}
      - uses : actions/upload-artifact@v4
        with:
          name: logs-${{ matrix.TESTENV }}
          path: test/${{ matrix.TESTENV }}/logs
        if: ${{ always() }}
